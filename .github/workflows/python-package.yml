# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  release:
    types: [published]

jobs:
  build:
    name: Pack@${{ matrix.os }}& Python${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.7]
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install fire requests pyinstaller
    - name: build exe
      run: |
        pyinstaller cli.py --onefile
    - name: zip file for macOS
      if: runner.os == 'macOS'
      run: |
        zip execute.zip  dist -r
    - name: zip file for Linux
      if: runner.os == 'Linux'
      run: |
        zip execute.zip  dist -r
    - name: zip file for window
      if: runner.os == 'Windows'
      run: |
        tar -caf execute.zip dist
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.2.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./execute.zip
        asset_name: my-artifact-${{ matrix.os }}.zip
        asset_content_type: application/zip
      
 
